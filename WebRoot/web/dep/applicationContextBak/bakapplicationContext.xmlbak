<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

    <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="com.microsoft.sqlserver.jdbc.SQLServerDriver">
		</property>
		<property name="url"
			value="jdbc:sqlserver://localhost:1433;databaseName=empLogDB">
		</property>
		<property name="username" value="sa"></property>
		<property name="password" value="123456"></property>
	</bean>
	
	<!-- sessionFactory依赖于dataSource -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.SQLServerDialect
				</prop>
				
				<!-- 二级缓存 -->
				<prop key="hibernate.cache.provider_class">
					org.hibernate.cache.EhCacheProvider
				</prop>
				<!-- 打印语句 -->
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/emplog/bean/Admin.hbm.xml</value>
				<value>com/emplog/bean/Dep.hbm.xml</value>
				<value>com/emplog/bean/Emp.hbm.xml</value>
				<value>com/emplog/bean/LogMessage.hbm.xml</value>
				<value>com/emplog/bean/EmpCheckLogEmail.hbm.xml</value>
				<value>com/emplog/bean/ReceiveLog.hbm.xml</value>
			</list>
		</property></bean>
		
		
		
		<!-- transactionManager：spring事务管理器（事务要添加在service层）   开始 -->
		<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>
		<!-- spring事务管理器   结束 -->
		
	
	    <!-- 添加admin Dao      开始 -->
	    <!--  dao配置，依赖于sessionFactory-->
	    <!-- admin -->
		<bean id="adminDao" class="com.emplog.dao.impl.AdminDaoImpl" scope="singleton">
			<property name="sessionFactory">
				<ref bean="sessionFactory"/>
			</property>
		</bean>
		
		<!-- dep -->
		<bean id="depDao" class="com.emplog.dao.impl.DepDaoImpl" scope="singleton">
			<property name="sessionFactory">
				<ref bean="sessionFactory"/>
			</property>
		</bean>
		
		
		
		
		<!-- service配置 service 添加事务adminService-》adminServiceTarget 原始对象 -->
		<!-- admin -->
		<bean id="adminServiceTarget" class="com.emplog.service.impl.AdminServiceImpl" scope="singleton">
			<property name="adminDao" ref="adminDao"></property>
		</bean>
		
		
	
		<!-- spring事务工厂，代理类，下面的action将引用这个service的代理类,生成具有事务的 代理对象 这里用的是申明式事务 -->
		<!-- admin -->
		<bean id="adminService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		    <!-- 对 adminServiceTarget对象生成代理 target-->
			<property name="target" ref="adminServiceTarget"></property>
			<!-- 生成带有事务的代理  transactionManager（事务管理器）-->
			<property name="transactionManager" ref="transactionManager"></property>
			<!-- 对那些方法进行什么的样的事务属性，比如只读 -->
			<property name="transactionAttributes">
				<props>
					<!-- 以find开头的操作，都执行PROPOGATION_REQUIRED（如果当前在事务当中就是用当前的事务，如果没有，就启用一个新的事务）.
					readOnly:只读的
					 -->
					<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
					<!-- 除了find开头的方法，我们都是用PROPOGATION_REQUIRED事务 -->
					<prop key="*">PROPAGATION_REQUIRED</prop>
				</props>
			</property>
		</bean>
		
		
					
			
		<!-- dep -->
		<bean id="depServiceTarget" class="com.emplog.service.impl.DepServiceImpl" scope="singleton">
			<property name="depDao" ref="depDao"></property>
		</bean>
	    <!-- dep -->
		<bean id="depService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
			<property name="target" ref="depServiceTarget"></property>
			<property name="transactionManager" ref="transactionManager"></property>
			<property name="transactionAttributes">
				<props>
					<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
					<prop key="*">PROPAGATION_REQUIRED</prop>
				</props>
			</property>
		</bean>
		

		
		<!-- action配置 -->
		<!-- admin  -->
		<!-- 添加admin  -->
		<bean id="saveAdminAction" class="com.emplog.action.admin.SaveAdminAction" scope="prototype">
			<property name="service" ref="adminService"></property>
		</bean>
		<!-- 显示admin的list-->
		<bean id="listAdminAction" class="com.emplog.action.admin.ListAdminAction" scope="prototype">
			<property name="service" ref="adminService"></property>
		</bean>
		<!-- 根据id删除admin-->
		<bean id="removeAdminAction" class="com.emplog.action.admin.RemoveAdminAction" scope="prototype">
			<property name="service" ref="adminService"></property>
		</bean>
		<!--根据id查找admin-->
		<bean id="findAdminByAdminIdAction" class="com.emplog.action.admin.FindAdminByAdminIdAction">
			<property name="service" ref="adminService"></property>
		</bean>
		<!-- 修改admin -->
		<bean id="updateAdminAction" class="com.emplog.action.admin.UpdateAdminAction" scope="prototype">
			<property name="service" ref="adminService"></property>
		</bean>
		
		<!-- dep -->
		<!-- 添加dep-->
		<bean id="saveDepAction" class="com.emplog.action.dep.SaveDepAction" scope="prototype">
				<property name="service" ref="depService"></property>
		</bean> 
		<!-- 显示dep  list-->
		<bean id="listDepAction" class="com.emplog.action.dep.ListDepAction" scope="prototype">
				<property name="service" ref="depService"></property>
		</bean> 
		<!-- 删除dep  -->
		<bean id="removeDepAction" class="com.emplog.action.dep.RemoveDepAction" scope="prototype">
				<property name="service" ref="depService"></property>
		</bean> 
		<!--根据id查找dep-->
		<bean id="findDepByDepIdAction" class="com.emplog.action.dep.FindDepByDepIdAction">
			<property name="service" ref="depService"></property>
		</bean>
		<!-- 修改dep -->
		<bean id="updateDepAction" class="com.emplog.action.dep.UpdateDepAction" scope="prototype">
			<property name="service" ref="depService"></property>
		</bean>
		
</beans>